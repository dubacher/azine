<?php

/**
 * BaseJob
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $state
 * @property integer $user_id
 * @property string $title
 * @property clob $description
 * @property string $attachment
 * @property string $required_skills
 * @property date $start_date
 * @property date $end_date
 * @property integer $fte
 * @property sfGuardUser $User
 * @property JobState $JobState
 * @property Doctrine_Collection $Application
 * 
 * @method integer             getId()              Returns the current record's "id" value
 * @method integer             getState()           Returns the current record's "state" value
 * @method integer             getUserId()          Returns the current record's "user_id" value
 * @method string              getTitle()           Returns the current record's "title" value
 * @method clob                getDescription()     Returns the current record's "description" value
 * @method string              getAttachment()      Returns the current record's "attachment" value
 * @method string              getRequiredSkills()  Returns the current record's "required_skills" value
 * @method date                getStartDate()       Returns the current record's "start_date" value
 * @method date                getEndDate()         Returns the current record's "end_date" value
 * @method integer             getFte()             Returns the current record's "fte" value
 * @method sfGuardUser         getUser()            Returns the current record's "User" value
 * @method JobState            getJobState()        Returns the current record's "JobState" value
 * @method Doctrine_Collection getApplication()     Returns the current record's "Application" collection
 * @method Job                 setId()              Sets the current record's "id" value
 * @method Job                 setState()           Sets the current record's "state" value
 * @method Job                 setUserId()          Sets the current record's "user_id" value
 * @method Job                 setTitle()           Sets the current record's "title" value
 * @method Job                 setDescription()     Sets the current record's "description" value
 * @method Job                 setAttachment()      Sets the current record's "attachment" value
 * @method Job                 setRequiredSkills()  Sets the current record's "required_skills" value
 * @method Job                 setStartDate()       Sets the current record's "start_date" value
 * @method Job                 setEndDate()         Sets the current record's "end_date" value
 * @method Job                 setFte()             Sets the current record's "fte" value
 * @method Job                 setUser()            Sets the current record's "User" value
 * @method Job                 setJobState()        Sets the current record's "JobState" value
 * @method Job                 setApplication()     Sets the current record's "Application" collection
 * 
 * @package    azine
 * @subpackage model
 * @author     DominikBusinger
 * @version    SVN: $Id: Builder.php 7380 2010-03-15 21:07:50Z jwage $
 */
abstract class BaseJob extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('job');
        $this->hasColumn('id', 'integer', 6, array(
             'type' => 'integer',
             'primary' => true,
             'autoincrement' => true,
             'length' => '6',
             ));
        $this->hasColumn('state', 'integer', 2, array(
             'type' => 'integer',
             'notnull' => true,
             'length' => '2',
             ));
        $this->hasColumn('user_id', 'integer', 4, array(
             'type' => 'integer',
             'notnull' => true,
             'length' => '4',
             ));
        $this->hasColumn('title', 'string', 200, array(
             'type' => 'string',
             'notnull' => true,
             'length' => '200',
             ));
        $this->hasColumn('description', 'clob', null, array(
             'type' => 'clob',
             'notnull' => true,
             ));
        $this->hasColumn('attachment', 'string', 255, array(
             'type' => 'string',
             'notnull' => false,
             'length' => '255',
             ));
        $this->hasColumn('required_skills', 'string', 255, array(
             'type' => 'string',
             'notnull' => false,
             'length' => '255',
             ));
        $this->hasColumn('start_date', 'date', null, array(
             'type' => 'date',
             'notnull' => true,
             ));
        $this->hasColumn('end_date', 'date', null, array(
             'type' => 'date',
             'notnull' => false,
             ));
        $this->hasColumn('fte', 'integer', 3, array(
             'type' => 'integer',
             'notnull' => true,
             'default' => 100,
             'length' => '3',
             ));

        $this->option('collate', 'utf8_unicode_ci');
        $this->option('charset', 'utf8');
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('sfGuardUser as User', array(
             'local' => 'user_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasOne('JobState', array(
             'local' => 'state',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasMany('Application', array(
             'local' => 'id',
             'foreign' => 'job_id'));

        $sluggable0 = new Doctrine_Template_Sluggable(array(
             'unique' => true,
             'fields' => 
             array(
              0 => 'title',
             ),
             'canUpdate' => true,
             ));
        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($sluggable0);
        $this->actAs($timestampable0);
    }
}